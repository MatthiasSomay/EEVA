@model EEVA.Web.PaginatedList<EEVA.Web.Models.ExamViewModel>

@{
    ViewData["Title"] = "Index";
}

<h1>List of Exams</h1>

<p>
    <a asp-action="Create">Create New Exam</a>
</p>
<form asp-action="Index" method="get" class="form-inline">
    <div class="form-actions no-color">
        <p>
            Find by keyword: <input type="text" name="SearchString" class="form-control mr-sm-2" value="@ViewData["currentFilter"]" />
            <input type="submit" value="Search" class="btn btn-outline-success my-2 my-sm-0" /> |
            <a asp-action="Index">Back to Full List</a>
        </p>
    </div>
</form>
<table class="table">
    <thead>
        <tr>
            <th>
                @Html.DisplayNameFor(model => model[0].Id)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].Date)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].StartTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].EndTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].CourseName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model[0].TeacherFullName)
            </th>
            <th></th>
        </tr>
    </thead>
    <tbody>

        @if (Model.Count() > 0)
            @foreach (var item in Model)
            {
                <tr>
                    <td>
                        @Html.DisplayFor(modelItem => item.Id)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Date)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.EndTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.CourseName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.TeacherFullName)
                    </td> 
                    <td>
                        @if (ViewContext.HttpContext.User.IsInRole("Teacher"))
                        {
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a><span> | </span>
                            <a asp-action="Details" asp-route-id="@item.Id">Details</a><span> | </span>
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        }
                        @if (ViewContext.HttpContext.User.IsInRole("Student"))
                        {
                            <a asp-action="StudentExamCreate" asp-route-id="@item.Id"  class="btn btn-outline-warning my-2 my-sm-0 btn-sm">Start Exam</a>
                        }
                    </td>
                </tr>
            }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<nav aria-label="...">
    <ul class="pagination">
        <li class="page-item @prevDisabled">
            <a asp-action="Index"
               asp-route-pageNumber="@(Model.PageIndex - 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link">
                Previous
            </a>
        </li>
        <li class="page-item @nextDisabled">
            <a asp-action="Index"
               asp-route-pageNumber="@(Model.PageIndex + 1)"
               asp-route-currentFilter="@ViewData["CurrentFilter"]"
               class="page-link">
                Next
            </a>
        </li>
    </ul>
</nav>

