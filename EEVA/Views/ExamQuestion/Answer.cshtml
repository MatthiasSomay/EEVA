@model EEVA.Web.Models.ExamQuestionViewModel


@{
    ViewData["Title"] = "Create";
}

<h1>Exam - @Html.DisplayFor(model => model.CourseName)</h1>
<br />
<div>
    <dl class="form-row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Student)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Student)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.StartTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.StartTime)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.EndTime)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.EndTime)
        </dd>
    </dl>
</div>

<h4>Question @Model.QuestionNumber  of @Model.StudentExam.Exam.ExamQuestions.Count</h4>
<hr />
<div class="row">
    <div class="col-md-8">
        <form asp-action="Answer">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="QuestionPhrase" class="control-label" style="font-weight:bold"></label>
                <p>@Html.DisplayFor(model => model.QuestionPhrase)</p>
            </div>
            <br />
            @if (Model.QuestionOpen != null)
            {
                <div class="form-group">
                    <label asp-for="Answer" class="control-label" style="font-weight:bold"></label>
                    <textarea asp-for="Answer" class="form-control" rows="3"></textarea>
                    <span asp-validation-for="Answer" class="text-danger"></span>
                </div>
            }
            @if (Model.QuestionMultipleChoice != null)
            {
                <div class="form-group">
                    <label asp-for="QuestionPhrase" class="control-label" style="font-weight:bold"></label>
                    <br />
                    @if (Model.QuestionMultipleChoice.Answers.Count() > 0)
                        @foreach (var item in Model.QuestionMultipleChoice.Answers)
                        {
                            <input name="Answers" type="checkbox" value="@item.Id.ToString()" class="chkTrt" /> @item.Answer<br />
                        }
                </div>
            }
            <br />
            <div class="form-group">
                <table>
                    <tr>
                        <td>
                            <input type="submit" name="submit" value="Save and back to list" class="btn btn-primary" />
                        </td>
                        <td>
                            <input type="submit" value="Submit Exam" class="btn btn-outline-success my-2 my-sm-0" />
                        </td>
                    </tr>
                </table>
            </div>

            @{
                var prevDisabled = "";
                var nextDisabled = "";
                if (Model.QuestionNumber == 1)
                {
                    prevDisabled = "disabled : true";
                }
                if (Model.QuestionNumber == Model.StudentExam.Exam.ExamQuestions.Count())
                {
                    nextDisabled = "disabled : true";
                }
            }
            <div class="form-group">
                <table>
                    <tr>
                        <td class="page-item @prevDisabled">
                            <input type="submit" name="submit" value="Previous" class="page-link" />
                        </td>
                        <td class="page-item @nextDisabled">
                            <input type="submit" name="submit" value="Next" class="page-link" />
                        </td>
                    </tr>
                </table>
            </div>
        </form>
    </div>
</div>


@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}


